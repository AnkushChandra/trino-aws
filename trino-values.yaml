image:
  repository: trinodb/trino
  tag: "435"
  pullPolicy: IfNotPresent

server:
  workers: 5
  node:
    environment: production
    dataDir: /data/trino
    pluginDir: /usr/lib/trino/plugin
  log:
    trino:
      level: INFO
  config:
    path: /etc/trino
    http:
      port: 8080
    https:
      enabled: false
    authenticationType: ""
    query:
      maxMemory: "4GB"
      maxMemoryPerNode: "1GB"
    memory:
      heapHeadroomPerNode: "1GB"
  exchangeManager:
    name: "filesystem"
    baseDir: "/tmp/trino-local-file-system-exchange-manager"
  workerExtraConfig: ""
  coordinatorExtraConfig: ""
  autoscaling:
    enabled: false
    maxReplicas: 5
    targetCPUUtilizationPercentage: 50

accessControl: {}

resourceGroups: {}

additionalNodeProperties: {}

additionalJVMConfig: {}

additionalConfigProperties: {}

additionalLogProperties: {}

additionalExchangeManagerProperties: {}

eventListenerProperties: {}

additionalCatalogs: {}

env: []

envFrom: []

initContainers: {}

securityContext:
  runAsUser: 1000
  runAsGroup: 1000

shareProcessNamespace:
  coordinator: false
  worker: false

service:
  type: LoadBalancer
  port: 8080
  annotations: {}

nodeSelector: {}

tolerations: []

affinity: {}

labels: {}

serviceAccount:
  create: true
  name: ""
  annotations: {}

secretMounts: []

coordinator:
  jvm:
    maxHeapSize: "8G"
    gcMethod:
      type: "UseG1GC"
      g1:
        heapRegionSize: "32M"
  config:
    memory:
      heapHeadroomPerNode: ""
    query:
      maxMemoryPerNode: "1GB"
  additionalJVMConfig: {}
  additionalConfigProperties: {}
  additionalLogProperties: {}
  additionalExchangeManagerProperties: {}
  env: []
  envFrom: []
  etcFiles:
    properties:
      config.properties: |
        coordinator=true
        node-scheduler.include-coordinator=false
        http-server.http.port=8080
        discovery.uri=http://localhost:8080
      jvm.config: |
        -server
        -Xmx8G
        -XX:+UseG1GC
        -XX:G1HeapRegionSize=32M
        -XX:+UseGCOverheadLimit
        -XX:+ExplicitGCInvokesConcurrent
        -XX:+HeapDumpOnOutOfMemoryError
        -XX:+ExitOnOutOfMemoryError
        -Djdk.attach.allowAttachSelf=true
        -XX:-UseBiasedLocking
        -XX:ReservedCodeCacheSize=512M
        -XX:PerMethodRecompilationCutoff=10000
        -XX:PerBytecodeRecompilationCutoff=10000
        -Djdk.nio.maxCachedBufferSize=2000000
      log.properties: |
        io.trino=INFO
  resources:
    requests:
      memory: "2Gi"
      cpu: "1"
    limits:
      memory: "8Gi"
      cpu: "2"
  livenessProbe: {}
  readinessProbe: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  additionalConfigFiles: {}
  additionalVolumes: []
  additionalVolumeMounts: []
  annotations: {}
  labels: {}
  secretMounts: []

worker:
  jvm:
    maxHeapSize: "8G"
    gcMethod:
      type: "UseG1GC"
      g1:
        heapRegionSize: "32M"
  config:
    memory:
      heapHeadroomPerNode: ""
    query:
      maxMemoryPerNode: "1GB"
  additionalJVMConfig: {}
  additionalConfigProperties: {}
  additionalLogProperties: {}
  additionalExchangeManagerProperties: {}
  env: []
  envFrom: []
  etcFiles:
    properties:
      config.properties: |
        coordinator=false
        http-server.http.port=8080
        discovery.uri=http://trino:8080
      jvm.config: |
        -server
        -Xmx8G
        -XX:+UseG1GC
        -XX:G1HeapRegionSize=32M
        -XX:+UseGCOverheadLimit
        -XX:+ExplicitGCInvokesConcurrent
        -XX:+HeapDumpOnOutOfMemoryError
        -XX:+ExitOnOutOfMemoryError
        -Djdk.attach.allowAttachSelf=true
        -XX:-UseBiasedLocking
        -XX:ReservedCodeCacheSize=512M
        -XX:PerMethodRecompilationCutoff=10000
        -XX:PerBytecodeRecompilationCutoff=10000
        -Djdk.nio.maxCachedBufferSize=2000000
      log.properties: |
        io.trino=INFO
  resources:
    requests:
      memory: "2Gi"
      cpu: "1"
    limits:
      memory: "8Gi"
      cpu: "2"
  livenessProbe: {}
  readinessProbe: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  additionalConfigFiles: {}
  additionalVolumes: []
  additionalVolumeMounts: []
  annotations: {}
  labels: {}
  secretMounts: []

kafka:
  mountPath: "/etc/trino/schemas"
  tableDescriptions: {}

commonLabels: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts: []
  tls: []
